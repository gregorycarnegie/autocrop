import numpy as np
from numpy.typing import NDArray

def crop_positions(
        face: tuple[float, float, float, float],
        face_percent: int,
        dimensions: tuple[int, int],
        padding: tuple[int, int, int, int]
) -> tuple[int, int, int, int] | None: ...
def gamma(gamma_value: float) -> NDArray: ...
def calculate_dimensions(height: int, width: int, target_height: int) -> tuple[int, float]: ...
def get_rotation_matrix(left_eye_landmarks: NDArray, right_eye_landmarks: NDArray, scale_factor: float) -> NDArray: ...
def reshape_buffer_to_image(buffer: bytes, height: int, width: int) -> NDArray: ...
def correct_exposure(image: NDArray, exposure: bool, video: bool) -> NDArray: ...
def validate_files(files: list[str], categories: list[int]) -> NDArray[np.bool_]: ...
def verify_file_type(file_path: str, category: int) -> bool: ...


class PathSecurityError(BaseException):
    message: str
    def __init__(self, message: str) -> None: ...

def sanitize_path(
    path_str: str,
    allowed_operations: list[str] | None = None,
    max_path_length: int = 4096,
    follow_symlinks: bool = False
) -> str | None: ...

def get_safe_error_message(error_msg: str) -> str: ...
